plugins {
    id 'com.android.application'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'org.jlleitschuh.gradle.ktlint'
}

apply from: '../gradleConfig/version.gradle'

def apikeyPropertiesFile = rootProject.file("apikey.properties")
def apikeyProperties = new Properties()
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.fgdc.marvelcharacters"
        minSdkVersion 28
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "MARVEL_API_BASE_URL", apikeyProperties["MARVEL_API_BASE_URL"]
        buildConfigField "String", "MARVEL_API_PUBLIC_KEY", apikeyProperties["MARVEL_API_PUBLIC_KEY"]
        buildConfigField "String", "MARVEL_API_TS", apikeyProperties["MARVEL_API_TS"]
        buildConfigField "String", "MARVEL_API_HASH", apikeyProperties["MARVEL_API_HASH"]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding = true
    }
    packagingOptions {
        exclude "**/attach_hotspot_windows.dll"
        exclude "META-INF/licenses/**"
        exclude "META-INF/AL2.0"
        exclude "META-INF/LGPL2.1"
    }
}

dependencies {

    implementation kotlin.stdlib
    implementation android.androidxCore
    implementation android.lifecycleViewmodel
    implementation android.lifecycleLivedata
    implementation android.lifecycleRuntime
    implementation android.appcompat
    implementation android.material
    implementation android.constraintLayout
    implementation android.recyclerView

    implementation kotlin.coroutinesCore
    implementation kotlin.coroutines

    //Retrofit
    implementation network.retrofit
    implementation network.retrofitConverter
    implementation network.okhttpInterceptor

    //Moshi
    implementation network.moshi
    kapt network.moshiCodegen

    //Dagger Hilt
    implementation libs.daggerHilt
    kapt libs.daggerHiltCompiler

    //Navigation
    implementation android.navigationUi
    implementation android.navigationFragment

    //Coil
    implementation libs.coil
    implementation libs.coilSvg

    //Lottie
    implementation libs.lottie

    //Unit Testing
    androidTestImplementation testAndroid.espressoCore
    kaptAndroidTest test.daggerHiltCompiler
    testImplementation test.daggerHiltTesting
    testImplementation test.archCore
    testImplementation test.coroutinesTest
    testImplementation test.mockk
    testImplementation test.junit
    testImplementation test.kluent
    testImplementation test.turbine
    testImplementation testAndroid.espresso
    testImplementation testAndroid.robolectric
    androidTestImplementation testAndroid.extJunit
    androidTestImplementation test.coroutinesTest
}